/// <reference types="node" />
import { GuildMember } from 'discord.js';
import { Canvas, Image } from 'canvas';
import { Gradient } from '@discord-card/core';
export { Gradient, Theme } from '@discord-card/core';
export declare var themes: {
    dark: {
        color: string;
        image: string;
    };
    circuit: {
        color: string;
        image: string;
    };
    code: {
        color: string;
        image: string;
        font: string;
    };
};
declare type Color = `#${string}` | Gradient;
declare type ImageResolvable = Canvas | Image | Buffer | string;
export declare type CardOptions = {
    /** Select a theme with some default options */
    theme?: (keyof typeof themes);
    /** Options for the text on the card */
    text?: {
        /** Text in the Top */
        title?: string;
        /**Text in the middle(big) */
        text?: string;
        /** Text on the bottom */
        subtitle?: string;
        /** Font Color */
        color?: Color;
        /** Custom Font */
        font?: string;
    };
    /** Options for the avatar */
    avatar?: {
        /** The Avatar Image, can be a URL/Canvas/Image or Buffer */
        image?: ImageResolvable;
        /** Width of the outline around the avatar */
        outlineWidth?: number;
        /** Color of the outline */
        outlineColor?: Color;
    };
    /** Override the Background, can be a URL/Canvas/Image or Buffer  */
    background?: ImageResolvable;
    /** If the background should be blurred (true -> 3) */
    blur?: boolean | number;
    /** When enabled a blurred border is drawn, enabled by default */
    border?: boolean;
    /** If enabled the edges will be rounded, enabled by default */
    rounded?: boolean;
};
export declare function drawCard(options: CardOptions): Promise<Buffer>;
export declare function welcomeImage(member: GuildMember, options?: CardOptions): Promise<Buffer>;
export declare function goodbyeImage(member: GuildMember, options?: CardOptions): Promise<Buffer>;
//# sourceMappingURL=index.d.ts.map